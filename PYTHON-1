(DAY-01)
--------
python (base)-
high level intrepeted programming language
introduced by(guido vann rossum)
easy to use
oops
dynamic type programming language
open source
---------------------------------
print("hello world")# -
indentation error-space error -
comma error-print without comma -
---------------------------------
data types
-----------
1.string(double qouts,single qouts),multiline string(doc string)->("""sentance""")
2.number(integer(-1,2,3,0,etc)excluding decimal number)
3.float(3.1,1,2.5,-4,-4.5)with decimal points
4.boolean(True,False)
comments
---------
nonexcecutive lines-
1.single linecomment
using (#))ex:#hi hello)
2.multiline comments
using(''' comments'''),("""coments""")

operators
---------

(arthmatic operator)
--------------------
(adition)
(subtraction)
/ (division)
(multiplication)
// (floor division(to get quotient value without decimal point)
** (exponetentiation(to find power of numbers)
% (modulus(to find reminder)
2.comparison operators
----------------------
< (less than)

(greater than)
= (greater than or equalto)
<= (less than or equalto)
== (equalto)
!= (notequalto)

3.logical operators
-------------------
and (if both true =true
or (if any one true=true)
not (opposite)

data structure
--------------
list
tuple
set
dictionary
--------------------------------------------------------------------------
printing statements
-------------------
print("hello world")#printed using double qoutes
print('hello')#printed using single qoutes
print('''hello world''')#printed using thrible qoutes so we can print several lines at a time
print(1)#to print integer
print(1.3)#to print float
print(True)#to print boolean value (True)
print(False)#to print boolean value (False)
-------------------------------------------------------------------------
#arthmatic operators
--------------------
print(100+90)#
print(100-90)#
print(60/8)#
print(100*90)#
print(4**2)#
print(11//2)#
print(11%2)#

#comparison operator
---------------------

< less than

greater than
= greater than or equalto
<= less than or equalto
== equalto
!= notequalto

print(5<5)
print(5>5)
print(5>=5)
print(5<=5)
print(5==5)
print(5!=5)

#logical operators
--------------------
print(5>10 and 5==5)#and-if both true =true
print(3>2 and 3!=3)#or -if any one true=true
print(not 3>1)#not -opposite.
--------------------------------------------
